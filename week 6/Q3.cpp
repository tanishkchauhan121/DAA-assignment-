#include<bits/stdc++.h>
using namespace std;
bool dfs(vector<vector<int>> adj,int src,int v)
{
    vector<int>vis(v,0);
    vis[src]=1;
    stack<int>s;
    s.push(src);
    while(!s.empty())
    {   
        int node=s.top();
        
        s.pop();
        vis[node]=1;
        for(auto it:adj[node])
        {
            if(!vis[it]){
                s.push(it);
            }
            else{
                if(it==src)
                   return true;
            }
        }

    }
    return false;
    

}
bool iscycle(vector<vector<int>> adj,int src,int v)
{
    for(int i=0;i<v;i++)
    {
        if(dfs(adj,i,v)==true)
           return true;
    }
    return false;
}
int main()
{
    int v,e;
    cout<<"Enter no of vertices";
    cin>>v;
    cout<<"Enter no of edges";
    cin>>e;
    
    vector<vector<int>>adj(v);
    for(int i=0;i<e;i++)
    { int u,v;
      cin>>u>>v;
      adj[u].push_back(v);

    }
    int src;
    cout<<"Enter source";
    cin>>src;
    bool res = dfs(adj,src,v);
    if(res==1)
       cout<<"Yes cycle exist";
    else
       cout<<"No cycle not exist";
}























































































































































































































































































































































































































































































































































































































































































































































































































































